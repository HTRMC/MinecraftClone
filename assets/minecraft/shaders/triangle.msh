#version 450
#extension GL_EXT_mesh_shader : require

layout(binding = 0) uniform UniformBufferObject {
    mat4 model;
    mat4 view;
    mat4 proj;
} ubo;

struct Vertex {
    vec3 pos;
    vec3 color;
    vec2 texCoord;
};

const Vertex vertices[4] = Vertex[4](
    Vertex(vec3(-0.5, -0.5, 0.0), vec3(1.0, 0.0, 0.0), vec2(1.0, 0.0)),
    Vertex(vec3(0.5, -0.5, 0.0), vec3(0.0, 1.0, 0.0), vec2(0.0, 0.0)),
    Vertex(vec3(0.5, 0.5, 0.0), vec3(0.0, 0.0, 1.0), vec2(0.0, 1.0)),
    Vertex(vec3(-0.5, 0.5, 0.0), vec3(1.0, 1.0, 1.0), vec2(1.0, 1.0))
);

const uint indices[6] = uint[6](0, 1, 2, 2, 3, 0);

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(triangles, max_vertices = 4, max_primitives = 2) out;

layout(location = 0) out vec3 fragColor[];
layout(location = 1) out vec2 fragTexCoord[];

void main() {
    SetMeshOutputsEXT(4, 2);

    for (uint i = 0; i < 4; ++i) {
        gl_MeshVerticesEXT[i].gl_Position = ubo.proj * ubo.view * ubo.model * vec4(vertices[i].pos, 1.0);
        fragColor[i] = vertices[i].color;
        fragTexCoord[i] = vertices[i].texCoord;
    }

    for (uint i = 0; i < 2; ++i) {
        gl_PrimitiveTriangleIndicesEXT[i] = uvec3(indices[i*3], indices[i*3+1], indices[i*3+2]);
    }
}